↑isRoot: true
comment: My First Page as root page
preloadPriority: high
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	/*End_c8o_PageFunction*/
        
segment: path-to-xfirst
title: First page
↓Header [ngx.components.UIDynamicElement-1491634212350]: 
  beanData: '{"ionBean":"Header"}'
  comment: Page header
  tagName: ion-header
  ↓ToolBar [ngx.components.UIDynamicElement-1491634231108]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSet1 [ngx.components.UIDynamicElement-1588171103814]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:start"}'
      tagName: ion-buttons
      ↓BackButton [ngx.components.UIDynamicElement-1643993281257]: 
        beanData: '{"ionBean":"BackButton"}'
        tagName: ion-back-button
      ↓MenuButton [ngx.components.UIDynamicElement-1588172846908]: 
        beanData: '{"ionBean":"MenuButton"}'
        tagName: ion-menu-button
    ↓BarTitle [ngx.components.UIDynamicElement-1491634265317]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Text [ngx.components.UIText-1491634275121]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Page
    ↓ButtonSet2 [ngx.components.UIDynamicElement-1588170811054]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button [ngx.components.UIDynamicElement-1588170817806]: 
        beanData: '{"ionBean":"Button"}'
        tagName: ion-button
        ↓Icon [ngx.components.UIDynamicElement-1588170831166]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:ellipsis-vertical",
             "IconMdName": "plain",
             "IconIosName": "plain"
            }'
          tagName: ion-icon
↓Content [ngx.components.UIDynamicElement-1489674805352]: 
  beanData: '{"ionBean":"Content"}'
  comment: Page content
  tagName: ion-content
  ↓tag [ngx.components.UIUseShared-1712319895999]: 
    sharedcomponent: lib_FullCalendar.Application.NgxApp.FullCalendar
    ↓locale [ngx.components.UIUseVariable-1712328200670]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'fr'
    ↓initialView [ngx.components.UIUseVariable-1712330342593]: 
      comment: |
        InitialDisplay such as 'dayGridMonth', 'timeGridWeek', 'listWeek', 'dayGridWeek', 'multiMonthYear'
        
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'dayGridWeek'
    ↓headerToolbar [ngx.components.UIUseVariable-1712332019857]: 
      comment: |
        'A JSON Object representing the Header toolbar 
        ```
        {
            left: ''prev,next today'',
            center: ''title'',
            right: ''dayGridMonth,timeGridWeek,timeGridDay''
        }```
        '
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: |
              'script:{
              	left: ''prev,next today'',
              	center: ''title'',
              	right: ''dayGridMonth, timeGridWeek, listWeek, dayGridWeek, multiMonthYear''
              }'
    ↓buttonText [ngx.components.UIUseVariable-1712332019859]: 
      comment: |
        'A JSON Object representing the Button labels 
        ```
        {
          today:    "Today",
          month:    ''month'',
          week:     ''week'',
          day:      ''day'',
          list:     ''list''
        }
        ```
        '
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: |
              'script:{
              			  today:    ''Aujour d hui'',
              			  month:    ''mois'',
              			  week:     ''semaine'',
              			  day:      ''annee'',
              			  list:     ''liste''
              }'
    ↓selectable [ngx.components.UIUseVariable-1712335132654]: 
      comment: Enables the user to select events can be true or false
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:true
    ↓calEvents [ngx.components.UIUseVariable-1712335132656]: 
      binding: twoWayBinding
      comment: Locale such as 'en', 'fr', 'es' ..
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: source:{"filter":"Local","project":"lib_FullCalendar","input":"","model":{"data":[{"localObject":"local"}],"path":"?.events","prefix":"","suffix":"","custom":"local.events","useCustom":true}}
↓Footer [ngx.components.UIDynamicElement-1491634242460]: 
  beanData: '{"ionBean":"Footer"}'
  comment: Page footer
  tagName: ion-footer
  ↓ToolBar [ngx.components.UIDynamicElement-1491634317538]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSet [ngx.components.UIDynamicElement-1588170246138]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:start"}'
      tagName: ion-buttons
      ↓Button1 [ngx.components.UIDynamicElement-1491634332730]: 
        beanData: '{"ionBean":"Button"}'
        tagName: ion-button
        ↓Text [ngx.components.UIText-1491634340354]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Action 1
    ↓ButtonSet1 [ngx.components.UIDynamicElement-1588170269871]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button2 [ngx.components.UIDynamicElement-1491634376874]: 
        beanData: '{"ionBean":"Button"}'
        tagName: ion-button
        ↓Text [ngx.components.UIText-1491634383107]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Action 2
↓PageEvent [ngx.components.UIPageEvent-1712335169803]: 
  ↓buildEvents [ngx.components.UICustomAction-1712335176611]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
            		
            		// Function to add days to a date
            		let addDays = function (days) {
            		  const result = new Date();
            		  result.setDate(result.getDate() + days);
            		  return result;
            		}
            
            		// Function to add random minutes to a date
            		let addRandomMinutes = function (date, maxMinutes) {
            		  const result = new Date(date);
            		  const randomMinutes = Math.floor(Math.random() * maxMinutes);
            		  result.setMinutes(result.getMinutes() + randomMinutes);
            		  return result;
            		}
            		
            		let events =[];
            		
            		// build a list of events with a random date
            			
            		let startDate = new Date()
            		for (let i = 0; i<10; i++) {
            			let randomDay = Math.floor(Math.random() * 7);
              			let baseDate = addDays(randomDay);
            
            			// Assume a week has 10,080 minutes (7 days * 24 hours * 60 minutes)
            			// Generate a random time within the week to add
            			let dateWithRandomTime = addRandomMinutes(baseDate, 10080 / 10);
            			events.push({
            		      id: ''ID-'' + i,
            		      title: ''my Demo Event'' + i,
            		      start: dateWithRandomTime
            			})
            		}
            		resolve(events);
            '
    ↓SetLocal [ngx.components.UIDynamicAction-1712335189451]: 
      beanData: |
        '{
         "ionBean": "SetLocalAction",
         "Property": "plain:events",
         "Value": "source:{\"filter\":\"Action\",\"project\":\"lib_FullCalendar\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1712335176611,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1712335169803,\"rootEvent\":true,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
        }'
      tagName: SetLocal