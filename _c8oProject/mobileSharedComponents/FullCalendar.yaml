comment: FullCalendar providing Calendar, planning and schedules
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_CompImport*/
        import dayGridPlugin from ''@fullcalendar/daygrid'';
        import listPlugin from ''@fullcalendar/list'';
        import monthPlugin from ''@fullcalendar/multimonth'';
        import timeGridPlugin from ''@fullcalendar/timegrid'';
        import interactionPlugin from ''@fullcalendar/interaction'';
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	public calendarOptions: CalendarOptions 
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		this.calendarOptions = {
        			events: this.calEvents,
        			headerToolbar: this.headerToolbar,
        			selectable: this.selectable,
        			selectMirror : true,
        			buttonText: this.buttonText,
        		    initialView: this.initialView,
        		    plugins: [dayGridPlugin, listPlugin, monthPlugin, timeGridPlugin, interactionPlugin],
        		    locale: this.locale,
        		    editable: this.editable,
        		    height: this.height,
        		    initialDate: this.initialDate,
        			dateClick: (info) => {
        				this.DateClicked.emit(info.date)	
        			},
        		    eventClassNames: function(arg) { 
        		        return [''occupied''] 
        	      	},
        		    multiMonthTitleFormat : {month: ''long'', year: ''numeric''},
        			eventChange: (info) => {
        				this.updateEvent(info);
        			}
        		}
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompChanges*/
        		Object.keys(changes).forEach( (key) => {
        			switch(key) {
        				case "locale": {
        					if(!changes[key].firstChange) {
        						this.calendarOptions["locale"] = changes[key].currentValue;
        					}
        				}
        				case "calEvents": {
        					if(!changes[key].firstChange) {
        						this.calendarOptions["events"] = changes[key].currentValue;
        					}
        				}
        			}
        		})
        		/*End_c8o_CompChanges*/
        /*Begin_c8o_CompDoCheck*/
        		/*End_c8o_CompDoCheck*/
        /*Begin_c8o_CompAfterContentInit*/
        		/*End_c8o_CompAfterContentInit*/
        /*Begin_c8o_CompAfterContentChecked*/
        		/*End_c8o_CompAfterContentChecked*/
        /*Begin_c8o_CompAfterViewInit*/
        		/*End_c8o_CompAfterViewInit*/
        /*Begin_c8o_CompAfterViewChecked*/
        		/*End_c8o_CompAfterViewChecked*/
        /*Begin_c8o_CompFunction*/
        	public updateEvent(info) {
        		let id = info.event.id
        		// update the event in the calEvents
        		let index = this.calEvents.findIndex((event) => event.id == id);
        		this.calEvents[index] = info.event.toPlainObject();
        		this.calEventsChange.emit(this.calEvents);
        		this.EventChanged.emit(info.event.toPlainObject());	
        	}
        	/*End_c8o_CompFunction*/
        '
↓SharedComponent_Event [ngx.components.UISharedComponentEvent-1712319930139]: 
  ↓InstallFullCalendar [ngx.components.UICustomAction-1712319939304]: 
    module_ng_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: FullCalendarModule
    module_ts_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: FullCalendarModule
              - java.lang.String: 
                - ↑value: '@fullcalendar/angular'
    package_dependencies: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: '@fullcalendar/core'
              - java.lang.String: 
                - ↑value: 6.1.11
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: '@fullcalendar/interaction'
              - java.lang.String: 
                - ↑value: 6.1.11
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: '@fullcalendar/daygrid'
              - java.lang.String: 
                - ↑value: 6.1.11
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: '@fullcalendar/timegrid'
              - java.lang.String: 
                - ↑value: 6.1.11
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: '@fullcalendar/list'
              - java.lang.String: 
                - ↑value: 6.1.11
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: '@fullcalendar/multimonth'
              - java.lang.String: 
                - ↑value: 6.1.11
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: '@fullcalendar/angular'
              - java.lang.String: 
                - ↑value: 6.1.10
    page_ts_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: CalendarOptions
              - java.lang.String: 
                - ↑value: '@fullcalendar/core'
↓tag [ngx.components.UIElement-1712321874964]: 
  tagName: full-calendar
  ↓_options_ [ngx.components.UIAttribute-1712322009859]: 
    attrName: '[options]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.calendarOptions
↓locale [ngx.components.UICompVariable-1712324627888]: 
  comment: Locale such as 'en', 'fr', 'es' ..
  value: '''en'''
↓initialView [ngx.components.UICompVariable-1712328878434]: 
  comment: |
    InitialDisplay such as 'dayGridMonth', 'timeGridWeek', 'listWeek', 'dayGridWeek', 'multiMonthYear'
    
  value: '''dayGridMonth'''
↓headerToolbar [ngx.components.UICompVariable-1712331031263]: 
  comment: |
    'A JSON Object representing the Header toolbar 
    <pre>
    {
        left: ''prev,next today'',
        center: ''title'',
        right: ''dayGridMonth,timeGridWeek,timeGridDay''
    }
    </pre>
    
    '
  value: |
    '{
    			    left: ''prev,next today'',
    			    center: ''title'',
    			    right: ''dayGridMonth,timeGridWeek,timeGridDay''
    			}'
↓buttonText [ngx.components.UICompVariable-1712331054546]: 
  comment: |
    'A JSON Object representing the Button labels 
    <pre>
    {
      today:    "Today",
      month:    ''month'',
      week:     ''week'',
      day:      ''day'',
      list:     ''list''
    }
    </pre>
    
    '
  value: |
    '{
    			  today:    ''today'',
    			  month:    ''month'',
    			  week:     ''week'',
    			  day:      ''day'',
    			  list:     ''list''
    			}'
↓selectable [ngx.components.UICompVariable-1712332668650]: 
  comment: Enables the user to select events can be true or false
  value: true
↓calEvents [ngx.components.UICompVariable-1712334912578]: 
  comment: |
    'The initial events to be displayed in the calendar. An array of event objects of this structure :
    <pre>
    {
      id: ''a'',
      title: ''my event'',
      start: ''2018-09-01''
    }
    </pre>
    See Event documentation for details : https://fullcalendar.io/docs/event-object
    
    Note that when a user resizes or modifies an event, this array will be automatically updated if you use two way binding.
    
    '
  value: |
    '[{
          id: ''a'',
          title: ''my event'',
          start: ''2018-09-01''
        }]'
↓initialDate [ngx.components.UICompVariable-1712388503624]: 
  comment: |
    The initial date displayed when the calendar first loads.
    
    Date
    
    When not specified, this value defaults to the current date.
    
    This value can be anything that can parse into a Date, including an ISO8601 date string like "2014-02-01".
  value: 
↓EventChanged [ngx.components.UICompEvent-1712392652901]: 
  attrName: EventChanged
  comment: |
    Triggered when an event is modified by the user, the modified event object will be in the <pre>out</out>
    
↓height [ngx.components.UICompVariable-1712582692128]: 
  comment: |
    Sets the height of the entire calendar, including header and footer.
    
    Integer, "auto", a CSS value like "100%"
    
    By default, this option is unset and the calendar’s height is calculated by aspectRatio.
    
    If an integer is specified, the height of the calendar will be guaranteed to be that exact pixel height. If the contents will not fit within the height, scrollbars will appear.
    
    If "auto" is specified, the view’s contents will assume a natural height and no scrollbars will be used.
    
    If "100%" is specified, the height of the calendar will match the height of its parent container element. See an example. Any other valid CSS value is accepted as well.
    
  value: '''100%'''
↓DateClicked [ngx.components.UICompEvent-1712591326517]: 
  attrName: DateClicked
  comment: |
    Triggered when an event is modified by the user, the modified event object will be in the <pre>out</out>
    
↓editable [ngx.components.UICompVariable-1712680228036]: 
  comment: Enables the user to edit events can be true or false
  value: true